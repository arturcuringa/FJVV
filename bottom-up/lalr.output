Grammar

    0 $accept: program $end

    1 program: decl_list proc_decl_list body

    2 body: START ';' stmt_list END ';'

    3 decl_list: %empty
    4          | decl_list decl_stmt ';'
    5          | decl_list DECLARE error ';'

    6 decl_stmt: DECLARE '(' id_list ')' data_type

    7 proc_decl_list: %empty
    8               | proc_decl_list proc_decl ';'

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER
   10          | IDENTIFIER error ';' stmt_list END IDENTIFIER

   11 data_type: INT_TYPE
   12          | FLOAT_TYPE
   13          | CHAR_TYPE
   14          | array_nont

   15 array_nont: ARRAY '[' expr ']' OF data_type

   16 super_id_list: %empty
   17              | id_list

   18 id_list: IDENTIFIER
   19        | id_list ',' IDENTIFIER

   20 stmt_list: %empty
   21          | stmt_list super_stmt ';'
   22          | stmt_list error ';'

   23 super_stmt: label_stmt
   24           | idless_stmt

   25 label_stmt: IDENTIFIER post_label_stmt

   26 post_label_stmt: ':' stmt
   27                | attr_stmt
   28                | proc_stmt

   29 stmt: labelless_stmt
   30     | idless_stmt

   31 labelless_stmt: IDENTIFIER post_labelless_stmt

   32 post_labelless_stmt: attr_stmt
   33                    | proc_stmt

   34 attr_stmt: array_access ATTR_SIGN expr

   35 idless_stmt: stop_stmt
   36            | io_stmt
   37            | control_stmt

   38 control_stmt: if_stmt
   39             | goto_stmt
   40             | loop_stmt
   41             | exit_stmt

   42 if_stmt: IF expr THEN stmt_list else_stmt ENDIF

   43 else_stmt: ELSE stmt_list
   44          | %empty

   45 goto_stmt: GOTO IDENTIFIER

   46 loop_stmt: LOOP ';' stmt_list ENDLOOP

   47 exit_stmt: EXITWHEN expr

   48 stop_stmt: STOP

   49 io_stmt: GET '(' id_list ')'
   50        | PUT skip_stmt '(' expr_list ')'

   51 skip_stmt: SKIP
   52          | %empty

   53 proc_stmt: '(' expr_list ')'

   54 expr_list: %empty
   55          | expr expr_list_tail

   56 expr_list_tail: ',' expr expr_list_tail
   57               | %empty

   58 literal: INTEGER
   59        | FLOAT
   60        | CHAR

   61 expr: expr '+' expr
   62     | expr '-' expr
   63     | expr '*' expr
   64     | expr '%' expr
   65     | expr '/' expr
   66     | expr '<' expr
   67     | expr '>' expr
   68     | expr '=' expr
   69     | expr DIFF_SIGN expr
   70     | expr GREATER_EQ_SIGN expr
   71     | expr LESS_EQ_SIGN expr
   72     | expr '&' expr
   73     | expr '|' expr
   74     | '(' expr ')'
   75     | '!' expr
   76     | '-' expr
   77     | IDENTIFIER array_access
   78     | literal

   79 array_access: %empty
   80             | '[' expr ']' array_access


Terminals, with rules where they appear

$end (0) 0
'!' (33) 75
'%' (37) 64
'&' (38) 72
'(' (40) 6 9 49 50 53 74
')' (41) 6 9 49 50 53 74
'*' (42) 63
'+' (43) 61
',' (44) 19 56
'-' (45) 62 76
'/' (47) 65
':' (58) 9 26
';' (59) 2 4 5 8 9 10 21 22 46
'<' (60) 66
'=' (61) 68
'>' (62) 67
'[' (91) 15 80
']' (93) 15 80
'|' (124) 73
error (256) 5 10 22
START (258) 2
END (259) 2 9 10
DECLARE (260) 5 6
PROCEDURE (261) 9
INT_TYPE (262) 11
FLOAT_TYPE (263) 12
CHAR_TYPE (264) 13
ARRAY (265) 15
OF (266) 15
IDENTIFIER (267) 9 10 18 19 25 31 45 77
INTEGER (268) 58
FLOAT (269) 59
CHAR (270) 60
IF (271) 42
THEN (272) 42
ENDIF (273) 42
ELSE (274) 43
GOTO (275) 45
LOOP (276) 46
ENDLOOP (277) 46
EXITWHEN (278) 47
STOP (279) 48
GET (280) 49
PUT (281) 50
SKIP (282) 51
ATTR_SIGN (283) 34
DIFF_SIGN (284) 69
GREATER_EQ_SIGN (285) 70
LESS_EQ_SIGN (286) 71
UMINUS (287)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
body (53)
    on left: 2, on right: 1
decl_list (54)
    on left: 3 4 5, on right: 1 4 5
decl_stmt (55)
    on left: 6, on right: 4
proc_decl_list (56)
    on left: 7 8, on right: 1 8
proc_decl (57)
    on left: 9 10, on right: 8
data_type (58)
    on left: 11 12 13 14, on right: 6 15
array_nont (59)
    on left: 15, on right: 14
super_id_list (60)
    on left: 16 17, on right: 9
id_list (61)
    on left: 18 19, on right: 6 17 19 49
stmt_list (62)
    on left: 20 21 22, on right: 2 9 10 21 22 42 43 46
super_stmt (63)
    on left: 23 24, on right: 21
label_stmt (64)
    on left: 25, on right: 23
post_label_stmt (65)
    on left: 26 27 28, on right: 25
stmt (66)
    on left: 29 30, on right: 26
labelless_stmt (67)
    on left: 31, on right: 29
post_labelless_stmt (68)
    on left: 32 33, on right: 31
attr_stmt (69)
    on left: 34, on right: 27 32
idless_stmt (70)
    on left: 35 36 37, on right: 24 30
control_stmt (71)
    on left: 38 39 40 41, on right: 37
if_stmt (72)
    on left: 42, on right: 38
else_stmt (73)
    on left: 43 44, on right: 42
goto_stmt (74)
    on left: 45, on right: 39
loop_stmt (75)
    on left: 46, on right: 40
exit_stmt (76)
    on left: 47, on right: 41
stop_stmt (77)
    on left: 48, on right: 35
io_stmt (78)
    on left: 49 50, on right: 36
skip_stmt (79)
    on left: 51 52, on right: 50
proc_stmt (80)
    on left: 53, on right: 28 33
expr_list (81)
    on left: 54 55, on right: 50 53
expr_list_tail (82)
    on left: 56 57, on right: 55 56
literal (83)
    on left: 58 59 60, on right: 78
expr (84)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78,
    on right: 15 34 42 47 55 56 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 80
array_access (85)
    on left: 79 80, on right: 34 77 80


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (decl_list)

    program    go to state 1
    decl_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decl_list . proc_decl_list body
    4 decl_list: decl_list . decl_stmt ';'
    5          | decl_list . DECLARE error ';'

    DECLARE  shift, and go to state 4

    $default  reduce using rule 7 (proc_decl_list)

    decl_stmt       go to state 5
    proc_decl_list  go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 decl_list: decl_list DECLARE . error ';'
    6 decl_stmt: DECLARE . '(' id_list ')' data_type

    error  shift, and go to state 7
    '('    shift, and go to state 8


State 5

    4 decl_list: decl_list decl_stmt . ';'

    ';'  shift, and go to state 9


State 6

    1 program: decl_list proc_decl_list . body
    8 proc_decl_list: proc_decl_list . proc_decl ';'

    START       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    body       go to state 12
    proc_decl  go to state 13


State 7

    5 decl_list: decl_list DECLARE error . ';'

    ';'  shift, and go to state 14


State 8

    6 decl_stmt: DECLARE '(' . id_list ')' data_type

    IDENTIFIER  shift, and go to state 15

    id_list  go to state 16


State 9

    4 decl_list: decl_list decl_stmt ';' .

    $default  reduce using rule 4 (decl_list)


State 10

    2 body: START . ';' stmt_list END ';'

    ';'  shift, and go to state 17


State 11

    9 proc_decl: IDENTIFIER . ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER
   10          | IDENTIFIER . error ';' stmt_list END IDENTIFIER

    error  shift, and go to state 18
    ':'    shift, and go to state 19


State 12

    1 program: decl_list proc_decl_list body .

    $default  reduce using rule 1 (program)


State 13

    8 proc_decl_list: proc_decl_list proc_decl . ';'

    ';'  shift, and go to state 20


State 14

    5 decl_list: decl_list DECLARE error ';' .

    $default  reduce using rule 5 (decl_list)


State 15

   18 id_list: IDENTIFIER .

    $default  reduce using rule 18 (id_list)


State 16

    6 decl_stmt: DECLARE '(' id_list . ')' data_type
   19 id_list: id_list . ',' IDENTIFIER

    ')'  shift, and go to state 21
    ','  shift, and go to state 22


State 17

    2 body: START ';' . stmt_list END ';'

    $default  reduce using rule 20 (stmt_list)

    stmt_list  go to state 23


State 18

   10 proc_decl: IDENTIFIER error . ';' stmt_list END IDENTIFIER

    ';'  shift, and go to state 24


State 19

    9 proc_decl: IDENTIFIER ':' . PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER

    PROCEDURE  shift, and go to state 25


State 20

    8 proc_decl_list: proc_decl_list proc_decl ';' .

    $default  reduce using rule 8 (proc_decl_list)


State 21

    6 decl_stmt: DECLARE '(' id_list ')' . data_type

    INT_TYPE    shift, and go to state 26
    FLOAT_TYPE  shift, and go to state 27
    CHAR_TYPE   shift, and go to state 28
    ARRAY       shift, and go to state 29

    data_type   go to state 30
    array_nont  go to state 31


State 22

   19 id_list: id_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 23

    2 body: START ';' stmt_list . END ';'
   21 stmt_list: stmt_list . super_stmt ';'
   22          | stmt_list . error ';'

    error       shift, and go to state 33
    END         shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 36
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    super_stmt    go to state 43
    label_stmt    go to state 44
    idless_stmt   go to state 45
    control_stmt  go to state 46
    if_stmt       go to state 47
    goto_stmt     go to state 48
    loop_stmt     go to state 49
    exit_stmt     go to state 50
    stop_stmt     go to state 51
    io_stmt       go to state 52


State 24

   10 proc_decl: IDENTIFIER error ';' . stmt_list END IDENTIFIER

    $default  reduce using rule 20 (stmt_list)

    stmt_list  go to state 53


State 25

    9 proc_decl: IDENTIFIER ':' PROCEDURE . '(' super_id_list ')' ';' stmt_list END IDENTIFIER

    '('  shift, and go to state 54


State 26

   11 data_type: INT_TYPE .

    $default  reduce using rule 11 (data_type)


State 27

   12 data_type: FLOAT_TYPE .

    $default  reduce using rule 12 (data_type)


State 28

   13 data_type: CHAR_TYPE .

    $default  reduce using rule 13 (data_type)


State 29

   15 array_nont: ARRAY . '[' expr ']' OF data_type

    '['  shift, and go to state 55


State 30

    6 decl_stmt: DECLARE '(' id_list ')' data_type .

    $default  reduce using rule 6 (decl_stmt)


State 31

   14 data_type: array_nont .

    $default  reduce using rule 14 (data_type)


State 32

   19 id_list: id_list ',' IDENTIFIER .

    $default  reduce using rule 19 (id_list)


State 33

   22 stmt_list: stmt_list error . ';'

    ';'  shift, and go to state 56


State 34

    2 body: START ';' stmt_list END . ';'

    ';'  shift, and go to state 57


State 35

   25 label_stmt: IDENTIFIER . post_label_stmt

    '('  shift, and go to state 58
    ':'  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 79 (array_access)

    post_label_stmt  go to state 61
    attr_stmt        go to state 62
    proc_stmt        go to state 63
    array_access     go to state 64


State 36

   42 if_stmt: IF . expr THEN stmt_list else_stmt ENDIF

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 73


State 37

   45 goto_stmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 74


State 38

   46 loop_stmt: LOOP . ';' stmt_list ENDLOOP

    ';'  shift, and go to state 75


State 39

   47 exit_stmt: EXITWHEN . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 76


State 40

   48 stop_stmt: STOP .

    $default  reduce using rule 48 (stop_stmt)


State 41

   49 io_stmt: GET . '(' id_list ')'

    '('  shift, and go to state 77


State 42

   50 io_stmt: PUT . skip_stmt '(' expr_list ')'

    SKIP  shift, and go to state 78

    $default  reduce using rule 52 (skip_stmt)

    skip_stmt  go to state 79


State 43

   21 stmt_list: stmt_list super_stmt . ';'

    ';'  shift, and go to state 80


State 44

   23 super_stmt: label_stmt .

    $default  reduce using rule 23 (super_stmt)


State 45

   24 super_stmt: idless_stmt .

    $default  reduce using rule 24 (super_stmt)


State 46

   37 idless_stmt: control_stmt .

    $default  reduce using rule 37 (idless_stmt)


State 47

   38 control_stmt: if_stmt .

    $default  reduce using rule 38 (control_stmt)


State 48

   39 control_stmt: goto_stmt .

    $default  reduce using rule 39 (control_stmt)


State 49

   40 control_stmt: loop_stmt .

    $default  reduce using rule 40 (control_stmt)


State 50

   41 control_stmt: exit_stmt .

    $default  reduce using rule 41 (control_stmt)


State 51

   35 idless_stmt: stop_stmt .

    $default  reduce using rule 35 (idless_stmt)


State 52

   36 idless_stmt: io_stmt .

    $default  reduce using rule 36 (idless_stmt)


State 53

   10 proc_decl: IDENTIFIER error ';' stmt_list . END IDENTIFIER
   21 stmt_list: stmt_list . super_stmt ';'
   22          | stmt_list . error ';'

    error       shift, and go to state 33
    END         shift, and go to state 81
    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 36
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    super_stmt    go to state 43
    label_stmt    go to state 44
    idless_stmt   go to state 45
    control_stmt  go to state 46
    if_stmt       go to state 47
    goto_stmt     go to state 48
    loop_stmt     go to state 49
    exit_stmt     go to state 50
    stop_stmt     go to state 51
    io_stmt       go to state 52


State 54

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' . super_id_list ')' ';' stmt_list END IDENTIFIER

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 16 (super_id_list)

    super_id_list  go to state 82
    id_list        go to state 83


State 55

   15 array_nont: ARRAY '[' . expr ']' OF data_type

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 84


State 56

   22 stmt_list: stmt_list error ';' .

    $default  reduce using rule 22 (stmt_list)


State 57

    2 body: START ';' stmt_list END ';' .

    $default  reduce using rule 2 (body)


State 58

   53 proc_stmt: '(' . expr_list ')'

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    $default  reduce using rule 54 (expr_list)

    expr_list  go to state 85
    literal    go to state 72
    expr       go to state 86


State 59

   26 post_label_stmt: ':' . stmt

    IDENTIFIER  shift, and go to state 87
    IF          shift, and go to state 36
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    stmt            go to state 88
    labelless_stmt  go to state 89
    idless_stmt     go to state 90
    control_stmt    go to state 46
    if_stmt         go to state 47
    goto_stmt       go to state 48
    loop_stmt       go to state 49
    exit_stmt       go to state 50
    stop_stmt       go to state 51
    io_stmt         go to state 52


State 60

   80 array_access: '[' . expr ']' array_access

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 91


State 61

   25 label_stmt: IDENTIFIER post_label_stmt .

    $default  reduce using rule 25 (label_stmt)


State 62

   27 post_label_stmt: attr_stmt .

    $default  reduce using rule 27 (post_label_stmt)


State 63

   28 post_label_stmt: proc_stmt .

    $default  reduce using rule 28 (post_label_stmt)


State 64

   34 attr_stmt: array_access . ATTR_SIGN expr

    ATTR_SIGN  shift, and go to state 92


State 65

   77 expr: IDENTIFIER . array_access

    '['  shift, and go to state 60

    $default  reduce using rule 79 (array_access)

    array_access  go to state 93


State 66

   58 literal: INTEGER .

    $default  reduce using rule 58 (literal)


State 67

   59 literal: FLOAT .

    $default  reduce using rule 59 (literal)


State 68

   60 literal: CHAR .

    $default  reduce using rule 60 (literal)


State 69

   76 expr: '-' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 94


State 70

   75 expr: '!' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 95


State 71

   74 expr: '(' . expr ')'

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 96


State 72

   78 expr: literal .

    $default  reduce using rule 78 (expr)


State 73

   42 if_stmt: IF expr . THEN stmt_list else_stmt ENDIF
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    THEN             shift, and go to state 97
    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110


State 74

   45 goto_stmt: GOTO IDENTIFIER .

    $default  reduce using rule 45 (goto_stmt)


State 75

   46 loop_stmt: LOOP ';' . stmt_list ENDLOOP

    $default  reduce using rule 20 (stmt_list)

    stmt_list  go to state 111


State 76

   47 exit_stmt: EXITWHEN expr .
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110

    $default  reduce using rule 47 (exit_stmt)


State 77

   49 io_stmt: GET '(' . id_list ')'

    IDENTIFIER  shift, and go to state 15

    id_list  go to state 112


State 78

   51 skip_stmt: SKIP .

    $default  reduce using rule 51 (skip_stmt)


State 79

   50 io_stmt: PUT skip_stmt . '(' expr_list ')'

    '('  shift, and go to state 113


State 80

   21 stmt_list: stmt_list super_stmt ';' .

    $default  reduce using rule 21 (stmt_list)


State 81

   10 proc_decl: IDENTIFIER error ';' stmt_list END . IDENTIFIER

    IDENTIFIER  shift, and go to state 114


State 82

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list . ')' ';' stmt_list END IDENTIFIER

    ')'  shift, and go to state 115


State 83

   17 super_id_list: id_list .
   19 id_list: id_list . ',' IDENTIFIER

    ','  shift, and go to state 22

    $default  reduce using rule 17 (super_id_list)


State 84

   15 array_nont: ARRAY '[' expr . ']' OF data_type
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110
    ']'              shift, and go to state 116


State 85

   53 proc_stmt: '(' expr_list . ')'

    ')'  shift, and go to state 117


State 86

   55 expr_list: expr . expr_list_tail
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110
    ','              shift, and go to state 118

    $default  reduce using rule 57 (expr_list_tail)

    expr_list_tail  go to state 119


State 87

   31 labelless_stmt: IDENTIFIER . post_labelless_stmt

    '('  shift, and go to state 58
    '['  shift, and go to state 60

    $default  reduce using rule 79 (array_access)

    post_labelless_stmt  go to state 120
    attr_stmt            go to state 121
    proc_stmt            go to state 122
    array_access         go to state 64


State 88

   26 post_label_stmt: ':' stmt .

    $default  reduce using rule 26 (post_label_stmt)


State 89

   29 stmt: labelless_stmt .

    $default  reduce using rule 29 (stmt)


State 90

   30 stmt: idless_stmt .

    $default  reduce using rule 30 (stmt)


State 91

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr
   80 array_access: '[' expr . ']' array_access

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110
    ']'              shift, and go to state 123


State 92

   34 attr_stmt: array_access ATTR_SIGN . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 124


State 93

   77 expr: IDENTIFIER array_access .

    $default  reduce using rule 77 (expr)


State 94

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr
   76     | '-' expr .

    $default  reduce using rule 76 (expr)


State 95

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr
   75     | '!' expr .

    $default  reduce using rule 75 (expr)


State 96

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr
   74     | '(' expr . ')'

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110
    ')'              shift, and go to state 125


State 97

   42 if_stmt: IF expr THEN . stmt_list else_stmt ENDIF

    $default  reduce using rule 20 (stmt_list)

    stmt_list  go to state 126


State 98

   69 expr: expr DIFF_SIGN . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 127


State 99

   70 expr: expr GREATER_EQ_SIGN . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 128


State 100

   71 expr: expr LESS_EQ_SIGN . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 129


State 101

   72 expr: expr '&' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 130


State 102

   73 expr: expr '|' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 131


State 103

   67 expr: expr '>' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 132


State 104

   66 expr: expr '<' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 133


State 105

   68 expr: expr '=' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 134


State 106

   61 expr: expr '+' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 135


State 107

   62 expr: expr '-' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 136


State 108

   63 expr: expr '*' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 137


State 109

   65 expr: expr '/' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 138


State 110

   64 expr: expr '%' . expr

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 139


State 111

   21 stmt_list: stmt_list . super_stmt ';'
   22          | stmt_list . error ';'
   46 loop_stmt: LOOP ';' stmt_list . ENDLOOP

    error       shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 36
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    ENDLOOP     shift, and go to state 140
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    super_stmt    go to state 43
    label_stmt    go to state 44
    idless_stmt   go to state 45
    control_stmt  go to state 46
    if_stmt       go to state 47
    goto_stmt     go to state 48
    loop_stmt     go to state 49
    exit_stmt     go to state 50
    stop_stmt     go to state 51
    io_stmt       go to state 52


State 112

   19 id_list: id_list . ',' IDENTIFIER
   49 io_stmt: GET '(' id_list . ')'

    ')'  shift, and go to state 141
    ','  shift, and go to state 22


State 113

   50 io_stmt: PUT skip_stmt '(' . expr_list ')'

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    $default  reduce using rule 54 (expr_list)

    expr_list  go to state 142
    literal    go to state 72
    expr       go to state 86


State 114

   10 proc_decl: IDENTIFIER error ';' stmt_list END IDENTIFIER .

    $default  reduce using rule 10 (proc_decl)


State 115

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' . ';' stmt_list END IDENTIFIER

    ';'  shift, and go to state 143


State 116

   15 array_nont: ARRAY '[' expr ']' . OF data_type

    OF  shift, and go to state 144


State 117

   53 proc_stmt: '(' expr_list ')' .

    $default  reduce using rule 53 (proc_stmt)


State 118

   56 expr_list_tail: ',' . expr expr_list_tail

    IDENTIFIER  shift, and go to state 65
    INTEGER     shift, and go to state 66
    FLOAT       shift, and go to state 67
    CHAR        shift, and go to state 68
    '-'         shift, and go to state 69
    '!'         shift, and go to state 70
    '('         shift, and go to state 71

    literal  go to state 72
    expr     go to state 145


State 119

   55 expr_list: expr expr_list_tail .

    $default  reduce using rule 55 (expr_list)


State 120

   31 labelless_stmt: IDENTIFIER post_labelless_stmt .

    $default  reduce using rule 31 (labelless_stmt)


State 121

   32 post_labelless_stmt: attr_stmt .

    $default  reduce using rule 32 (post_labelless_stmt)


State 122

   33 post_labelless_stmt: proc_stmt .

    $default  reduce using rule 33 (post_labelless_stmt)


State 123

   80 array_access: '[' expr ']' . array_access

    '['  shift, and go to state 60

    $default  reduce using rule 79 (array_access)

    array_access  go to state 146


State 124

   34 attr_stmt: array_access ATTR_SIGN expr .
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110

    $default  reduce using rule 34 (attr_stmt)


State 125

   74 expr: '(' expr ')' .

    $default  reduce using rule 74 (expr)


State 126

   21 stmt_list: stmt_list . super_stmt ';'
   22          | stmt_list . error ';'
   42 if_stmt: IF expr THEN stmt_list . else_stmt ENDIF

    error       shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 36
    ELSE        shift, and go to state 147
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    ENDIF  reduce using rule 44 (else_stmt)

    super_stmt    go to state 43
    label_stmt    go to state 44
    idless_stmt   go to state 45
    control_stmt  go to state 46
    if_stmt       go to state 47
    else_stmt     go to state 148
    goto_stmt     go to state 48
    loop_stmt     go to state 49
    exit_stmt     go to state 50
    stop_stmt     go to state 51
    io_stmt       go to state 52


State 127

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   69     | expr DIFF_SIGN expr .
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 69 (expr)


State 128

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   70     | expr GREATER_EQ_SIGN expr .
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 70 (expr)


State 129

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   71     | expr LESS_EQ_SIGN expr .
   72     | expr . '&' expr
   73     | expr . '|' expr

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 71 (expr)


State 130

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   72     | expr '&' expr .
   73     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110

    $default  reduce using rule 72 (expr)


State 131

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr
   73     | expr '|' expr .

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110

    $default  reduce using rule 73 (expr)


State 132

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   67     | expr '>' expr .
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 67 (expr)


State 133

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   66     | expr '<' expr .
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 66 (expr)


State 134

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   68     | expr '=' expr .
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 68 (expr)


State 135

   61 expr: expr . '+' expr
   61     | expr '+' expr .
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 61 (expr)


State 136

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   62     | expr '-' expr .
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 62 (expr)


State 137

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   63     | expr '*' expr .
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    $default  reduce using rule 63 (expr)


State 138

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   65     | expr '/' expr .
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    $default  reduce using rule 65 (expr)


State 139

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   64     | expr '%' expr .
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    $default  reduce using rule 64 (expr)


State 140

   46 loop_stmt: LOOP ';' stmt_list ENDLOOP .

    $default  reduce using rule 46 (loop_stmt)


State 141

   49 io_stmt: GET '(' id_list ')' .

    $default  reduce using rule 49 (io_stmt)


State 142

   50 io_stmt: PUT skip_stmt '(' expr_list . ')'

    ')'  shift, and go to state 149


State 143

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' . stmt_list END IDENTIFIER

    $default  reduce using rule 20 (stmt_list)

    stmt_list  go to state 150


State 144

   15 array_nont: ARRAY '[' expr ']' OF . data_type

    INT_TYPE    shift, and go to state 26
    FLOAT_TYPE  shift, and go to state 27
    CHAR_TYPE   shift, and go to state 28
    ARRAY       shift, and go to state 29

    data_type   go to state 151
    array_nont  go to state 31


State 145

   56 expr_list_tail: ',' expr . expr_list_tail
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '%' expr
   65     | expr . '/' expr
   66     | expr . '<' expr
   67     | expr . '>' expr
   68     | expr . '=' expr
   69     | expr . DIFF_SIGN expr
   70     | expr . GREATER_EQ_SIGN expr
   71     | expr . LESS_EQ_SIGN expr
   72     | expr . '&' expr
   73     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 98
    GREATER_EQ_SIGN  shift, and go to state 99
    LESS_EQ_SIGN     shift, and go to state 100
    '&'              shift, and go to state 101
    '|'              shift, and go to state 102
    '>'              shift, and go to state 103
    '<'              shift, and go to state 104
    '='              shift, and go to state 105
    '+'              shift, and go to state 106
    '-'              shift, and go to state 107
    '*'              shift, and go to state 108
    '/'              shift, and go to state 109
    '%'              shift, and go to state 110
    ','              shift, and go to state 118

    $default  reduce using rule 57 (expr_list_tail)

    expr_list_tail  go to state 152


State 146

   80 array_access: '[' expr ']' array_access .

    $default  reduce using rule 80 (array_access)


State 147

   43 else_stmt: ELSE . stmt_list

    $default  reduce using rule 20 (stmt_list)

    stmt_list  go to state 153


State 148

   42 if_stmt: IF expr THEN stmt_list else_stmt . ENDIF

    ENDIF  shift, and go to state 154


State 149

   50 io_stmt: PUT skip_stmt '(' expr_list ')' .

    $default  reduce using rule 50 (io_stmt)


State 150

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list . END IDENTIFIER
   21 stmt_list: stmt_list . super_stmt ';'
   22          | stmt_list . error ';'

    error       shift, and go to state 33
    END         shift, and go to state 155
    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 36
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    super_stmt    go to state 43
    label_stmt    go to state 44
    idless_stmt   go to state 45
    control_stmt  go to state 46
    if_stmt       go to state 47
    goto_stmt     go to state 48
    loop_stmt     go to state 49
    exit_stmt     go to state 50
    stop_stmt     go to state 51
    io_stmt       go to state 52


State 151

   15 array_nont: ARRAY '[' expr ']' OF data_type .

    $default  reduce using rule 15 (array_nont)


State 152

   56 expr_list_tail: ',' expr expr_list_tail .

    $default  reduce using rule 56 (expr_list_tail)


State 153

   21 stmt_list: stmt_list . super_stmt ';'
   22          | stmt_list . error ';'
   43 else_stmt: ELSE stmt_list .

    error       shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 36
    GOTO        shift, and go to state 37
    LOOP        shift, and go to state 38
    EXITWHEN    shift, and go to state 39
    STOP        shift, and go to state 40
    GET         shift, and go to state 41
    PUT         shift, and go to state 42

    ENDIF  reduce using rule 43 (else_stmt)

    super_stmt    go to state 43
    label_stmt    go to state 44
    idless_stmt   go to state 45
    control_stmt  go to state 46
    if_stmt       go to state 47
    goto_stmt     go to state 48
    loop_stmt     go to state 49
    exit_stmt     go to state 50
    stop_stmt     go to state 51
    io_stmt       go to state 52


State 154

   42 if_stmt: IF expr THEN stmt_list else_stmt ENDIF .

    $default  reduce using rule 42 (if_stmt)


State 155

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END . IDENTIFIER

    IDENTIFIER  shift, and go to state 156


State 156

    9 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER .

    $default  reduce using rule 9 (proc_decl)
