State 0 conflicts: 1 shift/reduce
State 6 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list proc_decl_list START ';' stmt_list END ';'
    2        | error

    3 decl_list: %empty
    4          | decl_stmt ';' decl_list
    5          | error ';' decl_list

    6 decl_stmt: DECLARE '(' id_list ')' data_type

    7 proc_decl_list: %empty
    8               | proc_decl ';' proc_decl_list
    9               | error ';' proc_decl_list

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER

   11 data_type: INT_TYPE
   12          | FLOAT_TYPE
   13          | CHAR_TYPE
   14          | array_nont

   15 array_nont: ARRAY '[' expr ']' OF data_type

   16 super_id_list: %empty
   17              | id_list

   18 id_list: IDENTIFIER id_list2

   19 id_list2: ',' IDENTIFIER id_list2
   20         | %empty

   21 stmt_list: %empty
   22          | super_stmt ';' stmt_list
   23          | error ';' stmt_list

   24 super_stmt: label_stmt
   25           | idless_stmt

   26 label_stmt: IDENTIFIER post_label_stmt

   27 post_label_stmt: ':' stmt
   28                | attr_stmt
   29                | proc_stmt

   30 stmt: labelless_stmt
   31     | idless_stmt

   32 labelless_stmt: IDENTIFIER post_labelless_stmt

   33 post_labelless_stmt: attr_stmt
   34                    | proc_stmt

   35 attr_stmt: array_access ATTR_SIGN expr

   36 idless_stmt: stop_stmt
   37            | io_stmt
   38            | control_stmt

   39 control_stmt: if_stmt
   40             | goto_stmt
   41             | loop_stmt
   42             | exit_stmt

   43 if_stmt: IF expr THEN stmt_list else_stmt ENDIF

   44 else_stmt: ELSE stmt_list
   45          | %empty

   46 goto_stmt: GOTO IDENTIFIER

   47 loop_stmt: LOOP ';' stmt_list ENDLOOP

   48 exit_stmt: EXITWHEN expr

   49 stop_stmt: STOP

   50 io_stmt: GET id_list
   51        | PUT skip_stmt '(' expr_list ')'

   52 skip_stmt: SKIP
   53          | %empty

   54 proc_stmt: '(' expr_list ')'

   55 expr_list: %empty
   56          | expr expr_list_tail

   57 expr_list_tail: ',' expr expr_list_tail
   58               | %empty

   59 literal: INTEGER
   60        | FLOAT
   61        | CHAR

   62 expr: expr '+' expr
   63     | expr '-' expr
   64     | expr '*' expr
   65     | expr '%' expr
   66     | expr '/' expr
   67     | expr '<' expr
   68     | expr '>' expr
   69     | expr '=' expr
   70     | expr DIFF_SIGN expr
   71     | expr GREATER_EQ_SIGN expr
   72     | expr LESS_EQ_SIGN expr
   73     | expr '&' expr
   74     | expr '|' expr
   75     | '(' expr ')'
   76     | '!' expr
   77     | '-' expr
   78     | IDENTIFIER array_access
   79     | literal

   80 array_access: %empty
   81             | '[' expr ']' array_access


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'%' (37) 65
'&' (38) 73
'(' (40) 6 10 51 54 75
')' (41) 6 10 51 54 75
'*' (42) 64
'+' (43) 62
',' (44) 19 57
'-' (45) 63 77
'/' (47) 66
':' (58) 10 27
';' (59) 1 4 5 8 9 10 22 23 47
'<' (60) 67
'=' (61) 69
'>' (62) 68
'[' (91) 15 81
']' (93) 15 81
'|' (124) 74
error (256) 2 5 9 23
START (258) 1
END (259) 1 10
DECLARE (260) 6
PROCEDURE (261) 10
INT_TYPE (262) 11
FLOAT_TYPE (263) 12
CHAR_TYPE (264) 13
ARRAY (265) 15
OF (266) 15
IDENTIFIER (267) 10 18 19 26 32 46 78
INTEGER (268) 59
FLOAT (269) 60
CHAR (270) 61
IF (271) 43
THEN (272) 43
ENDIF (273) 43
ELSE (274) 44
GOTO (275) 46
LOOP (276) 47
ENDLOOP (277) 47
EXITWHEN (278) 48
STOP (279) 49
GET (280) 50
PUT (281) 51
SKIP (282) 52
ATTR_SIGN (283) 35
DIFF_SIGN (284) 70
GREATER_EQ_SIGN (285) 71
LESS_EQ_SIGN (286) 72
UMINUS (287)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0
decl_list (53)
    on left: 3 4 5, on right: 1 4 5
decl_stmt (54)
    on left: 6, on right: 4
proc_decl_list (55)
    on left: 7 8 9, on right: 1 8 9
proc_decl (56)
    on left: 10, on right: 8
data_type (57)
    on left: 11 12 13 14, on right: 6 15
array_nont (58)
    on left: 15, on right: 14
super_id_list (59)
    on left: 16 17, on right: 10
id_list (60)
    on left: 18, on right: 6 17 50
id_list2 (61)
    on left: 19 20, on right: 18 19
stmt_list (62)
    on left: 21 22 23, on right: 1 10 22 23 43 44 47
super_stmt (63)
    on left: 24 25, on right: 22
label_stmt (64)
    on left: 26, on right: 24
post_label_stmt (65)
    on left: 27 28 29, on right: 26
stmt (66)
    on left: 30 31, on right: 27
labelless_stmt (67)
    on left: 32, on right: 30
post_labelless_stmt (68)
    on left: 33 34, on right: 32
attr_stmt (69)
    on left: 35, on right: 28 33
idless_stmt (70)
    on left: 36 37 38, on right: 25 31
control_stmt (71)
    on left: 39 40 41 42, on right: 38
if_stmt (72)
    on left: 43, on right: 39
else_stmt (73)
    on left: 44 45, on right: 43
goto_stmt (74)
    on left: 46, on right: 40
loop_stmt (75)
    on left: 47, on right: 41
exit_stmt (76)
    on left: 48, on right: 42
stop_stmt (77)
    on left: 49, on right: 36
io_stmt (78)
    on left: 50 51, on right: 37
skip_stmt (79)
    on left: 52 53, on right: 51
proc_stmt (80)
    on left: 54, on right: 29 34
expr_list (81)
    on left: 55 56, on right: 51 54
expr_list_tail (82)
    on left: 57 58, on right: 56 57
literal (83)
    on left: 59 60 61, on right: 79
expr (84)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79,
    on right: 15 35 43 48 56 57 62 63 64 65 66 67 68 69 70 71 72 73
    74 75 76 77 81
array_access (85)
    on left: 80 81, on right: 35 78 81


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    DECLARE  shift, and go to state 2

    error       [reduce using rule 3 (decl_list)]
    START       reduce using rule 3 (decl_list)
    IDENTIFIER  reduce using rule 3 (decl_list)

    program    go to state 3
    decl_list  go to state 4
    decl_stmt  go to state 5


State 1

    2 program: error .
    5 decl_list: error . ';' decl_list

    ';'  shift, and go to state 6

    $default  reduce using rule 2 (program)


State 2

    6 decl_stmt: DECLARE . '(' id_list ')' data_type

    '('  shift, and go to state 7


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: decl_list . proc_decl_list START ';' stmt_list END ';'

    error       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    START  reduce using rule 7 (proc_decl_list)

    proc_decl_list  go to state 11
    proc_decl       go to state 12


State 5

    4 decl_list: decl_stmt . ';' decl_list

    ';'  shift, and go to state 13


State 6

    5 decl_list: error ';' . decl_list

    error    shift, and go to state 14
    DECLARE  shift, and go to state 2

    error       [reduce using rule 3 (decl_list)]
    START       reduce using rule 3 (decl_list)
    IDENTIFIER  reduce using rule 3 (decl_list)

    decl_list  go to state 15
    decl_stmt  go to state 5


State 7

    6 decl_stmt: DECLARE '(' . id_list ')' data_type

    IDENTIFIER  shift, and go to state 16

    id_list  go to state 17


State 8

    0 $accept: program $end .

    $default  accept


State 9

    9 proc_decl_list: error . ';' proc_decl_list

    ';'  shift, and go to state 18


State 10

   10 proc_decl: IDENTIFIER . ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER

    ':'  shift, and go to state 19


State 11

    1 program: decl_list proc_decl_list . START ';' stmt_list END ';'

    START  shift, and go to state 20


State 12

    8 proc_decl_list: proc_decl . ';' proc_decl_list

    ';'  shift, and go to state 21


State 13

    4 decl_list: decl_stmt ';' . decl_list

    error    shift, and go to state 14
    DECLARE  shift, and go to state 2

    error       [reduce using rule 3 (decl_list)]
    START       reduce using rule 3 (decl_list)
    IDENTIFIER  reduce using rule 3 (decl_list)

    decl_list  go to state 22
    decl_stmt  go to state 5


State 14

    5 decl_list: error . ';' decl_list

    ';'  shift, and go to state 6


State 15

    5 decl_list: error ';' decl_list .

    $default  reduce using rule 5 (decl_list)


State 16

   18 id_list: IDENTIFIER . id_list2

    ','  shift, and go to state 23

    $default  reduce using rule 20 (id_list2)

    id_list2  go to state 24


State 17

    6 decl_stmt: DECLARE '(' id_list . ')' data_type

    ')'  shift, and go to state 25


State 18

    9 proc_decl_list: error ';' . proc_decl_list

    error       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    START  reduce using rule 7 (proc_decl_list)

    proc_decl_list  go to state 26
    proc_decl       go to state 12


State 19

   10 proc_decl: IDENTIFIER ':' . PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER

    PROCEDURE  shift, and go to state 27


State 20

    1 program: decl_list proc_decl_list START . ';' stmt_list END ';'

    ';'  shift, and go to state 28


State 21

    8 proc_decl_list: proc_decl ';' . proc_decl_list

    error       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    START  reduce using rule 7 (proc_decl_list)

    proc_decl_list  go to state 29
    proc_decl       go to state 12


State 22

    4 decl_list: decl_stmt ';' decl_list .

    $default  reduce using rule 4 (decl_list)


State 23

   19 id_list2: ',' . IDENTIFIER id_list2

    IDENTIFIER  shift, and go to state 30


State 24

   18 id_list: IDENTIFIER id_list2 .

    $default  reduce using rule 18 (id_list)


State 25

    6 decl_stmt: DECLARE '(' id_list ')' . data_type

    INT_TYPE    shift, and go to state 31
    FLOAT_TYPE  shift, and go to state 32
    CHAR_TYPE   shift, and go to state 33
    ARRAY       shift, and go to state 34

    data_type   go to state 35
    array_nont  go to state 36


State 26

    9 proc_decl_list: error ';' proc_decl_list .

    $default  reduce using rule 9 (proc_decl_list)


State 27

   10 proc_decl: IDENTIFIER ':' PROCEDURE . '(' super_id_list ')' ';' stmt_list END IDENTIFIER

    '('  shift, and go to state 37


State 28

    1 program: decl_list proc_decl_list START ';' . stmt_list END ';'

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    END  reduce using rule 21 (stmt_list)

    stmt_list     go to state 47
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 29

    8 proc_decl_list: proc_decl ';' proc_decl_list .

    $default  reduce using rule 8 (proc_decl_list)


State 30

   19 id_list2: ',' IDENTIFIER . id_list2

    ','  shift, and go to state 23

    $default  reduce using rule 20 (id_list2)

    id_list2  go to state 58


State 31

   11 data_type: INT_TYPE .

    $default  reduce using rule 11 (data_type)


State 32

   12 data_type: FLOAT_TYPE .

    $default  reduce using rule 12 (data_type)


State 33

   13 data_type: CHAR_TYPE .

    $default  reduce using rule 13 (data_type)


State 34

   15 array_nont: ARRAY . '[' expr ']' OF data_type

    '['  shift, and go to state 59


State 35

    6 decl_stmt: DECLARE '(' id_list ')' data_type .

    $default  reduce using rule 6 (decl_stmt)


State 36

   14 data_type: array_nont .

    $default  reduce using rule 14 (data_type)


State 37

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' . super_id_list ')' ';' stmt_list END IDENTIFIER

    IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 16 (super_id_list)

    super_id_list  go to state 60
    id_list        go to state 61


State 38

   23 stmt_list: error . ';' stmt_list

    ';'  shift, and go to state 62


State 39

   26 label_stmt: IDENTIFIER . post_label_stmt

    '('  shift, and go to state 63
    ':'  shift, and go to state 64
    '['  shift, and go to state 65

    $default  reduce using rule 80 (array_access)

    post_label_stmt  go to state 66
    attr_stmt        go to state 67
    proc_stmt        go to state 68
    array_access     go to state 69


State 40

   43 if_stmt: IF . expr THEN stmt_list else_stmt ENDIF

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 78


State 41

   46 goto_stmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 79


State 42

   47 loop_stmt: LOOP . ';' stmt_list ENDLOOP

    ';'  shift, and go to state 80


State 43

   48 exit_stmt: EXITWHEN . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 81


State 44

   49 stop_stmt: STOP .

    $default  reduce using rule 49 (stop_stmt)


State 45

   50 io_stmt: GET . id_list

    IDENTIFIER  shift, and go to state 16

    id_list  go to state 82


State 46

   51 io_stmt: PUT . skip_stmt '(' expr_list ')'

    SKIP  shift, and go to state 83

    $default  reduce using rule 53 (skip_stmt)

    skip_stmt  go to state 84


State 47

    1 program: decl_list proc_decl_list START ';' stmt_list . END ';'

    END  shift, and go to state 85


State 48

   22 stmt_list: super_stmt . ';' stmt_list

    ';'  shift, and go to state 86


State 49

   24 super_stmt: label_stmt .

    $default  reduce using rule 24 (super_stmt)


State 50

   25 super_stmt: idless_stmt .

    $default  reduce using rule 25 (super_stmt)


State 51

   38 idless_stmt: control_stmt .

    $default  reduce using rule 38 (idless_stmt)


State 52

   39 control_stmt: if_stmt .

    $default  reduce using rule 39 (control_stmt)


State 53

   40 control_stmt: goto_stmt .

    $default  reduce using rule 40 (control_stmt)


State 54

   41 control_stmt: loop_stmt .

    $default  reduce using rule 41 (control_stmt)


State 55

   42 control_stmt: exit_stmt .

    $default  reduce using rule 42 (control_stmt)


State 56

   36 idless_stmt: stop_stmt .

    $default  reduce using rule 36 (idless_stmt)


State 57

   37 idless_stmt: io_stmt .

    $default  reduce using rule 37 (idless_stmt)


State 58

   19 id_list2: ',' IDENTIFIER id_list2 .

    $default  reduce using rule 19 (id_list2)


State 59

   15 array_nont: ARRAY '[' . expr ']' OF data_type

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 87


State 60

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list . ')' ';' stmt_list END IDENTIFIER

    ')'  shift, and go to state 88


State 61

   17 super_id_list: id_list .

    $default  reduce using rule 17 (super_id_list)


State 62

   23 stmt_list: error ';' . stmt_list

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    END      reduce using rule 21 (stmt_list)
    ENDIF    reduce using rule 21 (stmt_list)
    ELSE     reduce using rule 21 (stmt_list)
    ENDLOOP  reduce using rule 21 (stmt_list)

    stmt_list     go to state 89
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 63

   54 proc_stmt: '(' . expr_list ')'

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    $default  reduce using rule 55 (expr_list)

    expr_list  go to state 90
    literal    go to state 77
    expr       go to state 91


State 64

   27 post_label_stmt: ':' . stmt

    IDENTIFIER  shift, and go to state 92
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    stmt            go to state 93
    labelless_stmt  go to state 94
    idless_stmt     go to state 95
    control_stmt    go to state 51
    if_stmt         go to state 52
    goto_stmt       go to state 53
    loop_stmt       go to state 54
    exit_stmt       go to state 55
    stop_stmt       go to state 56
    io_stmt         go to state 57


State 65

   81 array_access: '[' . expr ']' array_access

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 96


State 66

   26 label_stmt: IDENTIFIER post_label_stmt .

    $default  reduce using rule 26 (label_stmt)


State 67

   28 post_label_stmt: attr_stmt .

    $default  reduce using rule 28 (post_label_stmt)


State 68

   29 post_label_stmt: proc_stmt .

    $default  reduce using rule 29 (post_label_stmt)


State 69

   35 attr_stmt: array_access . ATTR_SIGN expr

    ATTR_SIGN  shift, and go to state 97


State 70

   78 expr: IDENTIFIER . array_access

    '['  shift, and go to state 65

    $default  reduce using rule 80 (array_access)

    array_access  go to state 98


State 71

   59 literal: INTEGER .

    $default  reduce using rule 59 (literal)


State 72

   60 literal: FLOAT .

    $default  reduce using rule 60 (literal)


State 73

   61 literal: CHAR .

    $default  reduce using rule 61 (literal)


State 74

   77 expr: '-' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 99


State 75

   76 expr: '!' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 100


State 76

   75 expr: '(' . expr ')'

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 101


State 77

   79 expr: literal .

    $default  reduce using rule 79 (expr)


State 78

   43 if_stmt: IF expr . THEN stmt_list else_stmt ENDIF
   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    THEN             shift, and go to state 102
    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115


State 79

   46 goto_stmt: GOTO IDENTIFIER .

    $default  reduce using rule 46 (goto_stmt)


State 80

   47 loop_stmt: LOOP ';' . stmt_list ENDLOOP

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    ENDLOOP  reduce using rule 21 (stmt_list)

    stmt_list     go to state 116
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 81

   48 exit_stmt: EXITWHEN expr .
   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115

    $default  reduce using rule 48 (exit_stmt)


State 82

   50 io_stmt: GET id_list .

    $default  reduce using rule 50 (io_stmt)


State 83

   52 skip_stmt: SKIP .

    $default  reduce using rule 52 (skip_stmt)


State 84

   51 io_stmt: PUT skip_stmt . '(' expr_list ')'

    '('  shift, and go to state 117


State 85

    1 program: decl_list proc_decl_list START ';' stmt_list END . ';'

    ';'  shift, and go to state 118


State 86

   22 stmt_list: super_stmt ';' . stmt_list

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    END      reduce using rule 21 (stmt_list)
    ENDIF    reduce using rule 21 (stmt_list)
    ELSE     reduce using rule 21 (stmt_list)
    ENDLOOP  reduce using rule 21 (stmt_list)

    stmt_list     go to state 119
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 87

   15 array_nont: ARRAY '[' expr . ']' OF data_type
   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115
    ']'              shift, and go to state 120


State 88

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' . ';' stmt_list END IDENTIFIER

    ';'  shift, and go to state 121


State 89

   23 stmt_list: error ';' stmt_list .

    $default  reduce using rule 23 (stmt_list)


State 90

   54 proc_stmt: '(' expr_list . ')'

    ')'  shift, and go to state 122


State 91

   56 expr_list: expr . expr_list_tail
   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115
    ','              shift, and go to state 123

    $default  reduce using rule 58 (expr_list_tail)

    expr_list_tail  go to state 124


State 92

   32 labelless_stmt: IDENTIFIER . post_labelless_stmt

    '('  shift, and go to state 63
    '['  shift, and go to state 65

    $default  reduce using rule 80 (array_access)

    post_labelless_stmt  go to state 125
    attr_stmt            go to state 126
    proc_stmt            go to state 127
    array_access         go to state 69


State 93

   27 post_label_stmt: ':' stmt .

    $default  reduce using rule 27 (post_label_stmt)


State 94

   30 stmt: labelless_stmt .

    $default  reduce using rule 30 (stmt)


State 95

   31 stmt: idless_stmt .

    $default  reduce using rule 31 (stmt)


State 96

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr
   81 array_access: '[' expr . ']' array_access

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115
    ']'              shift, and go to state 128


State 97

   35 attr_stmt: array_access ATTR_SIGN . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 129


State 98

   78 expr: IDENTIFIER array_access .

    $default  reduce using rule 78 (expr)


State 99

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr
   77     | '-' expr .

    $default  reduce using rule 77 (expr)


State 100

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr
   76     | '!' expr .

    $default  reduce using rule 76 (expr)


State 101

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr
   75     | '(' expr . ')'

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115
    ')'              shift, and go to state 130


State 102

   43 if_stmt: IF expr THEN . stmt_list else_stmt ENDIF

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    ENDIF  reduce using rule 21 (stmt_list)
    ELSE   reduce using rule 21 (stmt_list)

    stmt_list     go to state 131
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 103

   70 expr: expr DIFF_SIGN . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 132


State 104

   71 expr: expr GREATER_EQ_SIGN . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 133


State 105

   72 expr: expr LESS_EQ_SIGN . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 134


State 106

   73 expr: expr '&' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 135


State 107

   74 expr: expr '|' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 136


State 108

   68 expr: expr '>' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 137


State 109

   67 expr: expr '<' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 138


State 110

   69 expr: expr '=' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 139


State 111

   64 expr: expr '*' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 140


State 112

   66 expr: expr '/' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 141


State 113

   65 expr: expr '%' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 142


State 114

   62 expr: expr '+' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 143


State 115

   63 expr: expr '-' . expr

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 144


State 116

   47 loop_stmt: LOOP ';' stmt_list . ENDLOOP

    ENDLOOP  shift, and go to state 145


State 117

   51 io_stmt: PUT skip_stmt '(' . expr_list ')'

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    $default  reduce using rule 55 (expr_list)

    expr_list  go to state 146
    literal    go to state 77
    expr       go to state 91


State 118

    1 program: decl_list proc_decl_list START ';' stmt_list END ';' .

    $default  reduce using rule 1 (program)


State 119

   22 stmt_list: super_stmt ';' stmt_list .

    $default  reduce using rule 22 (stmt_list)


State 120

   15 array_nont: ARRAY '[' expr ']' . OF data_type

    OF  shift, and go to state 147


State 121

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' . stmt_list END IDENTIFIER

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    END  reduce using rule 21 (stmt_list)

    stmt_list     go to state 148
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 122

   54 proc_stmt: '(' expr_list ')' .

    $default  reduce using rule 54 (proc_stmt)


State 123

   57 expr_list_tail: ',' . expr expr_list_tail

    IDENTIFIER  shift, and go to state 70
    INTEGER     shift, and go to state 71
    FLOAT       shift, and go to state 72
    CHAR        shift, and go to state 73
    '-'         shift, and go to state 74
    '!'         shift, and go to state 75
    '('         shift, and go to state 76

    literal  go to state 77
    expr     go to state 149


State 124

   56 expr_list: expr expr_list_tail .

    $default  reduce using rule 56 (expr_list)


State 125

   32 labelless_stmt: IDENTIFIER post_labelless_stmt .

    $default  reduce using rule 32 (labelless_stmt)


State 126

   33 post_labelless_stmt: attr_stmt .

    $default  reduce using rule 33 (post_labelless_stmt)


State 127

   34 post_labelless_stmt: proc_stmt .

    $default  reduce using rule 34 (post_labelless_stmt)


State 128

   81 array_access: '[' expr ']' . array_access

    '['  shift, and go to state 65

    $default  reduce using rule 80 (array_access)

    array_access  go to state 150


State 129

   35 attr_stmt: array_access ATTR_SIGN expr .
   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115

    $default  reduce using rule 35 (attr_stmt)


State 130

   75 expr: '(' expr ')' .

    $default  reduce using rule 75 (expr)


State 131

   43 if_stmt: IF expr THEN stmt_list . else_stmt ENDIF

    ELSE  shift, and go to state 151

    $default  reduce using rule 45 (else_stmt)

    else_stmt  go to state 152


State 132

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   70     | expr DIFF_SIGN expr .
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 70 (expr)


State 133

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   71     | expr GREATER_EQ_SIGN expr .
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 71 (expr)


State 134

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   72     | expr LESS_EQ_SIGN expr .
   73     | expr . '&' expr
   74     | expr . '|' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 72 (expr)


State 135

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   73     | expr '&' expr .
   74     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115

    $default  reduce using rule 73 (expr)


State 136

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr
   74     | expr '|' expr .

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115

    $default  reduce using rule 74 (expr)


State 137

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   68     | expr '>' expr .
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 68 (expr)


State 138

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   67     | expr '<' expr .
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 67 (expr)


State 139

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   69     | expr '=' expr .
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 69 (expr)


State 140

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   64     | expr '*' expr .
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 64 (expr)


State 141

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   66     | expr '/' expr .
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 66 (expr)


State 142

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   65     | expr '%' expr .
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 65 (expr)


State 143

   62 expr: expr . '+' expr
   62     | expr '+' expr .
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    $default  reduce using rule 62 (expr)


State 144

   62 expr: expr . '+' expr
   63     | expr . '-' expr
   63     | expr '-' expr .
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    $default  reduce using rule 63 (expr)


State 145

   47 loop_stmt: LOOP ';' stmt_list ENDLOOP .

    $default  reduce using rule 47 (loop_stmt)


State 146

   51 io_stmt: PUT skip_stmt '(' expr_list . ')'

    ')'  shift, and go to state 153


State 147

   15 array_nont: ARRAY '[' expr ']' OF . data_type

    INT_TYPE    shift, and go to state 31
    FLOAT_TYPE  shift, and go to state 32
    CHAR_TYPE   shift, and go to state 33
    ARRAY       shift, and go to state 34

    data_type   go to state 154
    array_nont  go to state 36


State 148

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list . END IDENTIFIER

    END  shift, and go to state 155


State 149

   57 expr_list_tail: ',' expr . expr_list_tail
   62 expr: expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '*' expr
   65     | expr . '%' expr
   66     | expr . '/' expr
   67     | expr . '<' expr
   68     | expr . '>' expr
   69     | expr . '=' expr
   70     | expr . DIFF_SIGN expr
   71     | expr . GREATER_EQ_SIGN expr
   72     | expr . LESS_EQ_SIGN expr
   73     | expr . '&' expr
   74     | expr . '|' expr

    DIFF_SIGN        shift, and go to state 103
    GREATER_EQ_SIGN  shift, and go to state 104
    LESS_EQ_SIGN     shift, and go to state 105
    '&'              shift, and go to state 106
    '|'              shift, and go to state 107
    '>'              shift, and go to state 108
    '<'              shift, and go to state 109
    '='              shift, and go to state 110
    '*'              shift, and go to state 111
    '/'              shift, and go to state 112
    '%'              shift, and go to state 113
    '+'              shift, and go to state 114
    '-'              shift, and go to state 115
    ','              shift, and go to state 123

    $default  reduce using rule 58 (expr_list_tail)

    expr_list_tail  go to state 156


State 150

   81 array_access: '[' expr ']' array_access .

    $default  reduce using rule 81 (array_access)


State 151

   44 else_stmt: ELSE . stmt_list

    error       shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    IF          shift, and go to state 40
    GOTO        shift, and go to state 41
    LOOP        shift, and go to state 42
    EXITWHEN    shift, and go to state 43
    STOP        shift, and go to state 44
    GET         shift, and go to state 45
    PUT         shift, and go to state 46

    ENDIF  reduce using rule 21 (stmt_list)

    stmt_list     go to state 157
    super_stmt    go to state 48
    label_stmt    go to state 49
    idless_stmt   go to state 50
    control_stmt  go to state 51
    if_stmt       go to state 52
    goto_stmt     go to state 53
    loop_stmt     go to state 54
    exit_stmt     go to state 55
    stop_stmt     go to state 56
    io_stmt       go to state 57


State 152

   43 if_stmt: IF expr THEN stmt_list else_stmt . ENDIF

    ENDIF  shift, and go to state 158


State 153

   51 io_stmt: PUT skip_stmt '(' expr_list ')' .

    $default  reduce using rule 51 (io_stmt)


State 154

   15 array_nont: ARRAY '[' expr ']' OF data_type .

    $default  reduce using rule 15 (array_nont)


State 155

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END . IDENTIFIER

    IDENTIFIER  shift, and go to state 159


State 156

   57 expr_list_tail: ',' expr expr_list_tail .

    $default  reduce using rule 57 (expr_list_tail)


State 157

   44 else_stmt: ELSE stmt_list .

    $default  reduce using rule 44 (else_stmt)


State 158

   43 if_stmt: IF expr THEN stmt_list else_stmt ENDIF .

    $default  reduce using rule 43 (if_stmt)


State 159

   10 proc_decl: IDENTIFIER ':' PROCEDURE '(' super_id_list ')' ';' stmt_list END IDENTIFIER .

    $default  reduce using rule 10 (proc_decl)
