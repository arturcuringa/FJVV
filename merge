                  declare                   DECLARE   (len 7, line 1, col 1)
                   lparen                         (   (len 1, line 1, col 9)
               identifier                       arr   (len 3, line 1, col 10)
                separator                         ,   (len 1, line 1, col 13)
               identifier                       aux   (len 3, line 1, col 15)
                   rparen                         )   (len 1, line 1, col 18)
                    array                     ARRAY   (len 5, line 1, col 20)
                 lbracket                         [   (len 1, line 1, col 26)
                  integer                      1000   (len 4, line 1, col 27)
                 rbracket                         ]   (len 1, line 1, col 31)
                       of                        OF   (len 2, line 1, col 33)
                 int_type                   INTEGER   (len 7, line 1, col 36)
               terminator                         ;   (len 1, line 1, col 43)
                  declare                   DECLARE   (len 7, line 2, col 1)
                   lparen                         (   (len 1, line 2, col 9)
               identifier                   mergeIt   (len 7, line 2, col 10)
                separator                         ,   (len 1, line 2, col 17)
               identifier                    leftIt   (len 6, line 2, col 19)
                separator                         ,   (len 1, line 2, col 25)
               identifier                   rightIt   (len 7, line 2, col 27)
                   rparen                         )   (len 1, line 2, col 34)
                 int_type                   INTEGER   (len 7, line 2, col 36)
               terminator                         ;   (len 1, line 2, col 43)
               identifier                 mergesort   (len 9, line 4, col 1)
                    colon                         :   (len 1, line 4, col 10)
                procedure                 PROCEDURE   (len 9, line 4, col 12)
                   lparen                         (   (len 1, line 4, col 22)
               identifier                     first   (len 5, line 4, col 23)
                separator                         ,   (len 1, line 4, col 28)
               identifier                      last   (len 4, line 4, col 30)
                   rparen                         )   (len 1, line 4, col 34)
               terminator                         ;   (len 1, line 4, col 35)
                       if                        IF   (len 2, line 5, col 5)
               identifier                     first   (len 5, line 5, col 8)
                plus_sign                         +   (len 1, line 5, col 14)
                  integer                         1   (len 1, line 5, col 16)
                less_sign                         <   (len 1, line 5, col 18)
               identifier                      last   (len 4, line 5, col 20)
                     then                      THEN   (len 4, line 5, col 25)
               identifier                 mergesort   (len 9, line 6, col 9)
                   lparen                         (   (len 1, line 6, col 18)
               identifier                     first   (len 5, line 6, col 19)
                separator                         ,   (len 1, line 6, col 24)
                   lparen                         (   (len 1, line 6, col 26)
               identifier                     first   (len 5, line 6, col 27)
                plus_sign                         +   (len 1, line 6, col 33)
               identifier                      last   (len 4, line 6, col 35)
                   rparen                         )   (len 1, line 6, col 39)
                 div_sign                         /   (len 1, line 6, col 40)
                  integer                         2   (len 1, line 6, col 41)
                   rparen                         )   (len 1, line 6, col 42)
               terminator                         ;   (len 1, line 6, col 43)
               identifier                 mergesort   (len 9, line 7, col 9)
                   lparen                         (   (len 1, line 7, col 18)
                   lparen                         (   (len 1, line 7, col 19)
               identifier                     first   (len 5, line 7, col 20)
                plus_sign                         +   (len 1, line 7, col 26)
               identifier                      last   (len 4, line 7, col 28)
                   rparen                         )   (len 1, line 7, col 32)
                 div_sign                         /   (len 1, line 7, col 33)
                  integer                         2   (len 1, line 7, col 34)
                plus_sign                         +   (len 1, line 7, col 36)
                  integer                         1   (len 1, line 7, col 38)
                separator                         ,   (len 1, line 7, col 39)
               identifier                      last   (len 4, line 7, col 41)
                   rparen                         )   (len 1, line 7, col 45)
               terminator                         ;   (len 1, line 7, col 46)
               identifier                     merge   (len 5, line 8, col 9)
                   lparen                         (   (len 1, line 8, col 14)
               identifier                     first   (len 5, line 8, col 15)
                separator                         ,   (len 1, line 8, col 20)
                   lparen                         (   (len 1, line 8, col 22)
               identifier                     first   (len 5, line 8, col 23)
                plus_sign                         +   (len 1, line 8, col 29)
               identifier                      last   (len 4, line 8, col 31)
                   rparen                         )   (len 1, line 8, col 35)
                 div_sign                         /   (len 1, line 8, col 36)
                  integer                         2   (len 1, line 8, col 37)
                separator                         ,   (len 1, line 8, col 38)
                   lparen                         (   (len 1, line 8, col 40)
               identifier                     first   (len 5, line 8, col 41)
                plus_sign                         +   (len 1, line 8, col 47)
               identifier                      last   (len 4, line 8, col 49)
                   rparen                         )   (len 1, line 8, col 53)
                 div_sign                         /   (len 1, line 8, col 54)
                  integer                         2   (len 1, line 8, col 55)
                plus_sign                         +   (len 1, line 8, col 57)
                  integer                         1   (len 1, line 8, col 59)
                separator                         ,   (len 1, line 8, col 60)
               identifier                      last   (len 4, line 8, col 62)
                   rparen                         )   (len 1, line 8, col 66)
               terminator                         ;   (len 1, line 8, col 67)
                    endif                     ENDIF   (len 5, line 9, col 5)
               terminator                         ;   (len 1, line 9, col 10)
                      end                       END   (len 3, line 10, col 1)
               identifier                 mergesort   (len 9, line 10, col 5)
               terminator                         ;   (len 1, line 10, col 14)
               identifier                     merge   (len 5, line 12, col 1)
                    colon                         :   (len 1, line 12, col 6)
                procedure                 PROCEDURE   (len 9, line 12, col 8)
                   lparen                         (   (len 1, line 12, col 18)
               identifier                 leftFirst   (len 9, line 12, col 19)
                separator                         ,   (len 1, line 12, col 28)
               identifier                  leftLast   (len 8, line 12, col 30)
                separator                         ,   (len 1, line 12, col 38)
               identifier                rightFirst   (len 10, line 12, col 40)
                separator                         ,   (len 1, line 12, col 50)
               identifier                 rightLast   (len 9, line 12, col 52)
                   rparen                         )   (len 1, line 12, col 61)
               terminator                         ;   (len 1, line 12, col 62)
               identifier                    leftIt   (len 6, line 13, col 5)
                attr_sign                        :=   (len 2, line 13, col 12)
               identifier                  leftFirs   (len 8, line 13, col 15)
               terminator                         ;   (len 1, line 13, col 23)
               identifier                   rightIt   (len 7, line 14, col 5)
                attr_sign                        :=   (len 2, line 14, col 13)
               identifier                 rightLast   (len 9, line 14, col 16)
               terminator                         ;   (len 1, line 14, col 25)
               identifier                   mergeIt   (len 7, line 15, col 5)
                attr_sign                        :=   (len 2, line 15, col 13)
                  integer                         0   (len 1, line 15, col 16)
               terminator                         ;   (len 1, line 15, col 17)
                     loop                      LOOP   (len 4, line 16, col 5)
               terminator                         ;   (len 1, line 16, col 9)
                 exitwhen                  EXITWHEN   (len 8, line 17, col 9)
               identifier                    leftIt   (len 6, line 17, col 18)
             greater_sign                         >   (len 1, line 17, col 25)
               identifier                  leftLast   (len 8, line 17, col 27)
                  or_sign                         |   (len 1, line 17, col 36)
               identifier                   rightIt   (len 7, line 17, col 38)
             greater_sign                         >   (len 1, line 17, col 46)
               identifier                 rightLast   (len 9, line 17, col 48)
               terminator                         ;   (len 1, line 17, col 57)
                       if                        IF   (len 2, line 18, col 9)
               identifier                       arr   (len 3, line 18, col 12)
                 lbracket                         [   (len 1, line 18, col 15)
               identifier                    leftIt   (len 6, line 18, col 16)
                 rbracket                         ]   (len 1, line 18, col 22)
                less_sign                         <   (len 1, line 18, col 24)
               identifier                       arr   (len 3, line 18, col 26)
                 lbracket                         [   (len 1, line 18, col 29)
               identifier                   rightIt   (len 7, line 18, col 30)
                 rbracket                         ]   (len 1, line 18, col 37)
                     then                      THEN   (len 4, line 18, col 39)
               identifier                       aux   (len 3, line 19, col 13)
                 lbracket                         [   (len 1, line 19, col 16)
               identifier                   mergeIt   (len 7, line 19, col 17)
                 rbracket                         ]   (len 1, line 19, col 24)
                attr_sign                        :=   (len 2, line 19, col 26)
               identifier                       arr   (len 3, line 19, col 29)
                 lbracket                         [   (len 1, line 19, col 32)
               identifier                    leftIt   (len 6, line 19, col 33)
                 rbracket                         ]   (len 1, line 19, col 39)
               terminator                         ;   (len 1, line 19, col 40)
               identifier                   mergeIt   (len 7, line 20, col 13)
                attr_sign                        :=   (len 2, line 20, col 21)
               identifier                   mergeIt   (len 7, line 20, col 24)
                plus_sign                         +   (len 1, line 20, col 32)
                  integer                         1   (len 1, line 20, col 34)
               terminator                         ;   (len 1, line 20, col 35)
               identifier                    leftIt   (len 6, line 21, col 13)
                attr_sign                        :=   (len 2, line 21, col 20)
               identifier                    leftIt   (len 6, line 21, col 23)
                plus_sign                         +   (len 1, line 21, col 30)
                  integer                         1   (len 1, line 21, col 32)
               terminator                         ;   (len 1, line 21, col 33)
                     else                      ELSE   (len 4, line 22, col 9)
               identifier                       aux   (len 3, line 23, col 13)
                 lbracket                         [   (len 1, line 23, col 16)
               identifier                   mergeIt   (len 7, line 23, col 17)
                 rbracket                         ]   (len 1, line 23, col 24)
                attr_sign                        :=   (len 2, line 23, col 26)
               identifier                       arr   (len 3, line 23, col 29)
                 lbracket                         [   (len 1, line 23, col 32)
               identifier                   rightIt   (len 7, line 23, col 33)
                 rbracket                         ]   (len 1, line 23, col 40)
               terminator                         ;   (len 1, line 23, col 41)
               identifier                   mergeIt   (len 7, line 24, col 13)
                attr_sign                        :=   (len 2, line 24, col 21)
               identifier                   mergeIt   (len 7, line 24, col 24)
                plus_sign                         +   (len 1, line 24, col 32)
                  integer                         1   (len 1, line 24, col 34)
               terminator                         ;   (len 1, line 24, col 35)
               identifier                   rightIt   (len 7, line 25, col 13)
                attr_sign                        :=   (len 2, line 25, col 21)
               identifier                   rightIt   (len 7, line 25, col 24)
                plus_sign                         +   (len 1, line 25, col 32)
                  integer                         1   (len 1, line 25, col 34)
               terminator                         ;   (len 1, line 25, col 35)
                    endif                     ENDIF   (len 5, line 26, col 9)
               terminator                         ;   (len 1, line 26, col 14)
                  endloop                   ENDLOOP   (len 7, line 27, col 5)
               terminator                         ;   (len 1, line 27, col 12)
                     loop                      LOOP   (len 4, line 29, col 5)
               terminator                         ;   (len 1, line 29, col 9)
                 exitwhen                  EXITWHEN   (len 8, line 30, col 9)
               identifier                    leftIt   (len 6, line 30, col 18)
             greater_sign                         >   (len 1, line 30, col 25)
               identifier                  leftLast   (len 8, line 30, col 27)
               terminator                         ;   (len 1, line 30, col 35)
               identifier                       aux   (len 3, line 31, col 9)
                 lbracket                         [   (len 1, line 31, col 12)
               identifier                   mergeIt   (len 7, line 31, col 13)
                 rbracket                         ]   (len 1, line 31, col 20)
                attr_sign                        :=   (len 2, line 31, col 22)
               identifier                       arr   (len 3, line 31, col 25)
                 lbracket                         [   (len 1, line 31, col 28)
               identifier                    leftIt   (len 6, line 31, col 29)
                 rbracket                         ]   (len 1, line 31, col 35)
               terminator                         ;   (len 1, line 31, col 36)
               identifier                   mergeIt   (len 7, line 32, col 9)
                attr_sign                        :=   (len 2, line 32, col 17)
               identifier                   mergeIt   (len 7, line 32, col 20)
                plus_sign                         +   (len 1, line 32, col 28)
                  integer                         1   (len 1, line 32, col 30)
               terminator                         ;   (len 1, line 32, col 31)
               identifier                    leftIt   (len 6, line 33, col 9)
                attr_sign                        :=   (len 2, line 33, col 16)
               identifier                    leftIt   (len 6, line 33, col 19)
                plus_sign                         +   (len 1, line 33, col 26)
                  integer                         1   (len 1, line 33, col 28)
               terminator                         ;   (len 1, line 33, col 29)
                  endloop                   ENDLOOP   (len 7, line 34, col 5)
               terminator                         ;   (len 1, line 34, col 12)
                     loop                      LOOP   (len 4, line 36, col 5)
               terminator                         ;   (len 1, line 36, col 9)
                 exitwhen                  EXITWHEN   (len 8, line 37, col 9)
               identifier                   rightIt   (len 7, line 37, col 18)
             greater_sign                         >   (len 1, line 37, col 26)
               identifier                 rightLast   (len 9, line 37, col 28)
               terminator                         ;   (len 1, line 37, col 37)
               identifier                       aux   (len 3, line 38, col 9)
                 lbracket                         [   (len 1, line 38, col 12)
               identifier                   mergeIt   (len 7, line 38, col 13)
                 rbracket                         ]   (len 1, line 38, col 20)
                attr_sign                        :=   (len 2, line 38, col 22)
               identifier                       arr   (len 3, line 38, col 25)
                 lbracket                         [   (len 1, line 38, col 28)
               identifier                   rightIt   (len 7, line 38, col 29)
                 rbracket                         ]   (len 1, line 38, col 36)
               terminator                         ;   (len 1, line 38, col 37)
               identifier                   mergeIt   (len 7, line 39, col 9)
                attr_sign                        :=   (len 2, line 39, col 17)
               identifier                   mergeIt   (len 7, line 39, col 20)
                plus_sign                         +   (len 1, line 39, col 28)
                  integer                         1   (len 1, line 39, col 30)
               terminator                         ;   (len 1, line 39, col 31)
               identifier                   rightIt   (len 7, line 40, col 9)
                attr_sign                        :=   (len 2, line 40, col 17)
               identifier                   rightIt   (len 7, line 40, col 20)
                plus_sign                         +   (len 1, line 40, col 28)
                  integer                         1   (len 1, line 40, col 30)
               terminator                         ;   (len 1, line 40, col 31)
                  endloop                   ENDLOOP   (len 7, line 41, col 5)
               terminator                         ;   (len 1, line 41, col 12)
               identifier                   mergeIt   (len 7, line 43, col 5)
                attr_sign                        :=   (len 2, line 43, col 13)
                  integer                         0   (len 1, line 43, col 16)
               terminator                         ;   (len 1, line 43, col 17)
               identifier                    leftIt   (len 6, line 44, col 5)
                attr_sign                        :=   (len 2, line 44, col 12)
               identifier                 leftFirst   (len 9, line 44, col 15)
               terminator                         ;   (len 1, line 44, col 24)
                     loop                      LOOP   (len 4, line 45, col 5)
               terminator                         ;   (len 1, line 45, col 9)
                 exitwhen                  EXITWHEN   (len 8, line 46, col 9)
               identifier                    leftIt   (len 6, line 46, col 18)
             greater_sign                         >   (len 1, line 46, col 25)
               identifier                 rightLast   (len 9, line 46, col 27)
               terminator                         ;   (len 1, line 46, col 36)
               identifier                       arr   (len 3, line 47, col 9)
                 lbracket                         [   (len 1, line 47, col 12)
               identifier                    leftIt   (len 6, line 47, col 13)
                 rbracket                         ]   (len 1, line 47, col 19)
                attr_sign                        :=   (len 2, line 47, col 21)
               identifier                       aux   (len 3, line 47, col 24)
                 lbracket                         [   (len 1, line 47, col 27)
               identifier                   mergeIt   (len 7, line 47, col 28)
                 rbracket                         ]   (len 1, line 47, col 35)
               terminator                         ;   (len 1, line 47, col 36)
               identifier                    leftIt   (len 6, line 48, col 9)
                attr_sign                        :=   (len 2, line 48, col 16)
               identifier                    leftIt   (len 6, line 48, col 19)
                plus_sign                         +   (len 1, line 48, col 26)
                  integer                         1   (len 1, line 48, col 28)
               terminator                         ;   (len 1, line 48, col 29)
               identifier                   mergeIt   (len 7, line 49, col 9)
                attr_sign                        :=   (len 2, line 49, col 17)
               identifier                   mergeIt   (len 7, line 49, col 20)
                plus_sign                         +   (len 1, line 49, col 28)
                  integer                         1   (len 1, line 49, col 30)
               terminator                         ;   (len 1, line 49, col 31)
                  endloop                   ENDLOOP   (len 7, line 50, col 5)
               terminator                         ;   (len 1, line 50, col 12)
                      end                       END   (len 3, line 51, col 1)
               identifier                     merge   (len 5, line 51, col 5)
               terminator                         ;   (len 1, line 51, col 10)
                    start                     START   (len 5, line 53, col 1)
               terminator                         ;   (len 1, line 53, col 6)
               identifier                       arr   (len 3, line 54, col 5)
                 lbracket                         [   (len 1, line 54, col 8)
                  integer                         0   (len 1, line 54, col 9)
                 rbracket                         ]   (len 1, line 54, col 10)
                attr_sign                        :=   (len 2, line 54, col 12)
                  integer                         4   (len 1, line 54, col 15)
               terminator                         ;   (len 1, line 54, col 16)
               identifier                       arr   (len 3, line 55, col 5)
                 lbracket                         [   (len 1, line 55, col 8)
                  integer                         1   (len 1, line 55, col 9)
                 rbracket                         ]   (len 1, line 55, col 10)
                attr_sign                        :=   (len 2, line 55, col 12)
                  integer                         3   (len 1, line 55, col 15)
               terminator                         ;   (len 1, line 55, col 16)
               identifier                       arr   (len 3, line 56, col 5)
                 lbracket                         [   (len 1, line 56, col 8)
                  integer                         2   (len 1, line 56, col 9)
                 rbracket                         ]   (len 1, line 56, col 10)
                attr_sign                        :=   (len 2, line 56, col 12)
                  integer                         1   (len 1, line 56, col 15)
               terminator                         ;   (len 1, line 56, col 16)
               identifier                       arr   (len 3, line 57, col 5)
                 lbracket                         [   (len 1, line 57, col 8)
                  integer                         3   (len 1, line 57, col 9)
                 rbracket                         ]   (len 1, line 57, col 10)
                attr_sign                        :=   (len 2, line 57, col 12)
                  integer                         2   (len 1, line 57, col 15)
               terminator                         ;   (len 1, line 57, col 16)
               identifier                 mergesort   (len 9, line 59, col 5)
                   lparen                         (   (len 1, line 59, col 14)
                  integer                         0   (len 1, line 59, col 15)
                separator                         ,   (len 1, line 59, col 16)
                  integer                         3   (len 1, line 59, col 18)
                   rparen                         )   (len 1, line 59, col 19)
               terminator                         ;   (len 1, line 59, col 20)
                      end                       END   (len 3, line 60, col 1)
               terminator                         ;   (len 1, line 60, col 4)
